<template>
    <div class="page" data-name="navigation">
        <div class="page-content">
            <div id="NavLocarjs">
                
            </div>
            <div id="navigation-overview">
                <div id="navigation-overview-map-container"><div id="navigation-overview-map"></div></div>
                <div id="route-input">
                    <div class="tabs-animated-wrap">
                        <div class="tabs">
                            <div id="tab1" class="tab tab-active">
                                <div class="nav">
                                    <div class="row h-100">
                                        <div id="navigation-content" class="col-10">
                                            <div class="row h-100">
                                                <div class="col-3">    
                                                    <i id="current-direction-arrow" class="fa-solid fa-arrow-up"></i>                              
                                                </div>
                                                <div class="col-9">
                                                    <div class="row h-100">
                                                        <div class="col-12"> 
                                                            <h3 id="destination-name" class="h-100">Modwest (11A)</h3> 
                                                        </div>
                                                    </div>
                                                    <div class="row h-100">
                                                        <div class="col-12"> 
                                                            <small id="navigation-info" class="h-100">12 min - 340 m</small> 
                                                        </div>
                                                    </div>
                                                </div> 
                                            </div>  
                                        </div>
                                        <div class="col-2 ml-2">
                                            <button id="stop-button" href="#view-route"  class="tab-link tab-link-active button button-fill r-2 h-100">Stop</button> 
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div> 
                </div>        
            </div>
        </div>
    </div>
   
   
</template>
<script>    
    import { waitForElement } from "../js/utils/dom.js";
    import { initializeLocAR, destroyLocARInstance } from "../js/plugins/locar/locar.js";
    import { runLocarNav } from "../js/plugins/locar/locarNav.js";
    import { checkForURLParams } from "../js/utils/routes.js";
    import { createLiveRouteMap } from '../js/plugins/maps/routeOverviewMap.js';

    export default async (props, { $, $on, $f7 }) => {
        const app = window.app;
        let locarInstance = null; // Define outside to be accessible by both handlers
        let locarContainerId = null; // Store the ID

        $on('page:tabshow', async () => {
            console.log('NAVIGATION PAGE SHOW');
            await checkForURLParams(app, $f7.views.main.router); // Pass the correct router instance

            // Add checks for necessary navigation data before initializing LocAR
            if (!app.NAVIGATION_ROUTE || !app.NAVIGATION_ROUTE_STEPS || !app.NAVIGATION_ROUTE_DATA) {
                console.error("Navigation data missing. Cannot start navigation.");
                app.dialog.alert("Navigation data is missing. Please try again.", "Error", () => {
                    $f7.views.main.router.navigate('/route/'); // Navigate to the route page
                });
                return;
            }

            const locarConatiner = await waitForElement("NavLocarjs");
            if (!locarConatiner) {
                console.error("LocAR container 'NavLocarjs' not found."); 
                app.dialog.alert("LocAR container not found. Please try again.", "Error", () => {
                    $f7.views.main.router.navigate('/route/'); // Navigate to the route page
                });
                return;
            }
            locarContainerId = locarConatiner.id;
            
            try {
                await createLiveRouteMap(app, await waitForElement("navigation-overview-map"));
                locarInstance = await initializeLocAR(app, locarConatiner); // Assign to the outer scope variable
                console.log("LocAR instance initialized:", locarInstance); // Debugging line    
                if (locarInstance) { // Check if initialization was successful
                    runLocarNav(app, locarInstance);
                } else {
                    console.error("LocAR initialization failed.");
                    app.dialog.alert("LocAR initialization failed. Please try again.", "Error", () => {
                        $f7.views.main.router.navigate('/route/'); // Navigate to the route page
                    });
                    return;
                }
            } catch (error) {
                console.error("Error during LocAR initialization or runLocarNav:", error);
                app.dialog.alert("An error occurred while initializing LocAR. Please try again.", "Error", () => {
                    $f7.views.main.router.navigate('/route/'); // Navigate to the route page
                });
                return;
            }

        })



        $on('page:tabhide', () => {
            app.NAVIGATION_ROUTE = null;
            app.NAVIGATION_ROUTE_STEPS = null;
            app.NAVIGATION_ROUTE_DATA = null;      
            if (locarContainerId) { // Use the stored ID
                destroyLocARInstance(app, locarContainerId);
                locarInstance = null; // Clear the instance variable
                locarContainerId = null; // Clear the ID       
            }
        });

   

        return $render;
    };
</script>
