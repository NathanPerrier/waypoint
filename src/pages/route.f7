<template>
    <div class="page" data-name="route">
        <div class="page-content">

            <a href="#view-home" id="go-back"  class="tab-link tab-link-active">        
                <i class="fa fa-arrow-left fa-2x"></i>        
            </a>
            <div id="locarjs">
                
            </div>
            <div id="route-input">
                
                <!-- Tabs animated wrapper, required to switch tabs with transition -->
                <div class="tabs-animated-wrap">

                    <!-- Tabs, tabs wrapper -->
                    <div class="tabs">
                    <!-- Tab 1, active by default -->
                    <div id="tab1" class="tab tab-active">
                        <div id="search-results-list">

                        </div>
                        <div class="nav">
                            <div class="row h-100">
                                <div class="col-11">
                                    <div class="row h-100">
                                        <div class="col-9 p-0">    
                                            <input id="search-input" autocomplete="street-address" type="text" name="search-input" placeholder="ModWest (Building 11A)" />                                           
                                        </div>
                                        <div class="col-3">
                                            <a id="search-button" href="#" data-tab=".tab2" class="button button-fill h-100 tab-link tab-link-active">Search</a>
                                        </div> 
                                    </div>  
                                </div>
                                <div class="col-1 ml-2">
                                    <button id="settings-button" data-actions=".settings-actions" class="actions-open button button-outline h-100"><i class="fa-solid fa-sliders fa-2x"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>
                
                    <!-- Tab 2 -->
                    <div id="tab2" class="tab">
                        ... Tab 2 content ...
                    </div>
                
                    <!-- Tab 3 -->
                    <div id="tab3" class="tab">
                        ... Tab 3 content ...
                    </div>
                    </div>
                </div>
                
            </div>

            <div class="actions-modal settings-actions bg-white" id="settings-actions">
                <form class="list list-strong-ios list-dividers-ios list-outline-ios form-store-data" id="settings-form">
                    <h1 class="text-align-center mb-3">Settings</h1>
                    <ul>
                        <!-- add units form input metric/imerial-->
                        <li>
                            <div class="item-content item-input">
                                <div class="item-inner">
                                    <div class="item-title item-label">Navigation Mode</div>
                                  <div class="item-input-wrap">
                                    <input type="text" placeholder="Navigation Mode" name="navigationMode" readonly="readonly" id="settings-picker-input" />
                                  </div>
                                </div>
                            </div>
                        </li>
                        <li>
                            <div class="item-content item-input">
                                <div class="item-inner">
                                    <div class="item-title item-label">Start Location</div>
                                    <div class="item-input-wrap">
                                        <div class="row h-100">
                                            <div class="col-9">
                                                <input type="text" id="startLocation" name="startLocation" class="m-auto" placeholder="Start Location" />
                                            </div>
                                            <div class="col-3">
                                                <a id="startLocationButton" class="button button-fill m-auto">Use Current Location</a>
                                            </div>  
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="settings-map"></div>
                        </li>
                      
                    </ul>
                    <a data-actions=".settings-actions" class="actions-close button button-fill m-5 r-2">Done</a>
                </form>
            </div>
        </div>
    </div>

        <!--  -->
   
</template>
<script>    
    import {autocompleteSearch, validSearch} from "../js/plugins/maps/mapboxSearch.js";

    // on init add data navigation kode data from store and add user's current location (use save coordinates and do mapbox search to get name)

    // on modal close change submit data to store


    export default (props, { $, $on, $f7 }) => {

        let settingsPicker;

        $on('pageInit', () => {

            var searchInput = document.getElementById('search-input');
            var startLocation = document.getElementById('startLocation').value;
            var searchResults = document.getElementById('search-results-list');

            searchInput.addEventListener('input', async function() {
                autocompleteSearch(searchInput, searchResults, startLocation);
            });

            var settingsPicker = $f7.picker.create({
                inputEl: '#settings-picker-input',
                cols: [
                    {
                        values: ['walking', 'biking', 'driving'],
                        displayValues: ['Walking', 'Biking', 'Driving'],
                    }
                ],
                openIn: 'popover',
            });

            var searchButton = document.getElementById('search-button');

            searchButton.addEventListener('click', async function() {
                var searchValue = document.getElementById('search-input').value;
                var navigationMode = document.getElementById('settings-picker-input').value;
                var startLocation = document.getElementById('startLocation').value;
                
                if (searchValue === '') {
                    $f7.dialog.alert('Please enter a search value');
                    return;
                }

                if (navigationMode === '' || navigationMode === null) {
                    $f7.dialog.alert('Please select a navigation mode');
                    return;
                }

                if (startLocation === '') {
                    $f7.dialog.alert('Please enter a start location');
                    return;
                }

                var searchResults = await validSearch(searchValue);

                if (searchResults === null) {
                    $f7.dialog.alert('No results found');
                    return;
                }

                if (!searchResults[0]) {
                    $f7.dialog.alert('No results found');
                    return;
                }

                var searchResult = searchResults[1];
                console.log(searchResult);
                var searchResultName = searchResult.name;
                var searchResultAddress = searchResult.full_address;
                var searchResultPlaceFormatted = searchResult.place_formatted;
                var searchResultType = searchResult.feature_type;
                var searchResultMapboxId = searchResult.mapbox_id;

                var searchResultData = {
                    name: searchResultName,
                    address: searchResultAddress,
                    type: searchResultType,
                    placeFormatted: searchResultPlaceFormatted,
                    mapboxId: searchResultMapboxId,
                    navigationMode: navigationMode,
                    startLocation: startLocation
                };

                $f7.dialog.confirm(`Navigate to ${searchResultName}?`, 'Waypoint', () => {
                    $f7.dialog.alert('Navigating to ' + searchResultName);
                });

            });
        });
    
        return $render;
    };
</script>
